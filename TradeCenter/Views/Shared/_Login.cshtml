@model TradeCenter.Models.Login

@if (User.Identity.IsAuthenticated == false)
{
    using (Html.BeginForm("Login", "Account", FormMethod.Post, new { @class = "navbar-form" }))
    {
            <div class="form-group">
                <div>@Html.DisplayNameFor(model => model.UserName)</div>
                <div>@Html.EditorFor(model => model.UserName)</div>
            </div>

            <div class="form-group">
                <div>@Html.DisplayNameFor(model => model.Password)</div>
                <div>@Html.PasswordFor(model => model.Password)</div>
            </div>

            <div class="form-group">
                <br />
                <input type="submit" class="navbar-btn" value="Log In" />&nbsp;
                @Html.ActionLink("Register", "Register", "Account")
                <span>@TempData["error"]</span>
            </div>

            <div>
                <div>@Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })</div>
                <div>@Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })</div>
            </div>
    }
}
else
{
    <ul class="list-inline">
        @if (Session["userName"] != null)
        {
            <li>@Html.ActionLink(Session["userName"].ToString(), "Edit", "Account")</li>
        }
        else
        {
            <li>@Html.ActionLink(User.Identity.Name, "Edit", "Account")</li>
        }
        <li>@Html.ActionLink("(Log Out)", "Logout", "Account")</li>
    </ul>
    
    <br />
    <div>@Html.ActionLink("Advertise!", "Add", "Product", null, new { @class = "btn btn-success" })</div>
}


